/*****************************************************************//**
 * @file main.h
 *
 * @brief
 *
 * @author Samuel Hussey
 * @version v1.0: initial release
 *********************************************************************/

#ifndef _MAIN_H_INCLUDED
#define _MAIN_H_INCLUDED

#include "chu_init.h"

// Goertzel stuff
#define SAMPLING_RATE 179000 //182760
#define BLOCK_SIZE 512.0f
#define GOERTZEL_SCALAR (2.0f / BLOCK_SIZE)
#define TARGET_FREQ_0 3500
#define TARGET_FREQ_1 4200
#define TARGET_FREQ_2 4860
#define TARGET_FREQ_3 5550

// PWM and ADC stuff
#define NUM_SINE_TABLE_ENTRIES 512
#define DDS_UPDATES_PER_FRAME 512
#define ADC_NUM_SAMPLES 512
#define PWM_FREQ ((SYS_CLK_FREQ * 1000000 / NUM_SINE_TABLE_ENTRIES) + 1)
#define NUM_RX 4
#define NUM_TX 4
#define IIR_DECAY 0.5

// state machine variables
typedef enum
{
    CAPTURE,
	COMPUTE_HEATMAP,
    OUTPUT_HEATMAP
} state_t;


// Computed using a python helper script
const uint16_t sine_table[NUM_SINE_TABLE_ENTRIES] = {

		256, 259, 262, 265, 268, 272, 275, 278, 281, 284, 287, 290, 293, 296, 299,
		302, 306, 309, 312, 315, 318, 321, 324, 327, 330, 333, 336, 339, 342, 344,
		347, 350, 353, 356, 359, 362, 365, 367, 370, 373, 376, 378, 381, 384, 387,
		389, 392, 395, 397, 400, 402, 405, 407, 410, 412, 415, 417, 420, 422, 424,
		427, 429, 431, 433, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454, 456,
		458, 460, 462, 464, 465, 467, 469, 471, 472, 474, 475, 477, 479, 480, 481,
		483, 484, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499,
		500, 501, 502, 502, 503, 504, 504, 505, 506, 506, 507, 507, 508, 508, 508,
		509, 509, 509, 510, 510, 510, 510, 510, 510, 510, 510, 510, 510, 510, 509,
		509, 509, 508, 508, 508, 507, 507, 506, 506, 505, 504, 504, 503, 502, 502,
		501, 500, 499, 498, 497, 496, 495, 494, 493, 492, 491, 489, 488, 487, 486,
		484, 483, 481, 480, 479, 477, 475, 474, 472, 471, 469, 467, 465, 464, 462,
		460, 458, 456, 454, 452, 450, 448, 446, 444, 442, 440, 438, 436, 433, 431,
		429, 427, 424, 422, 420, 417, 415, 412, 410, 407, 405, 402, 400, 397, 395,
		392, 389, 387, 384, 381, 378, 376, 373, 370, 367, 365, 362, 359, 356, 353,
		350, 347, 344, 342, 339, 336, 333, 330, 327, 324, 321, 318, 315, 312, 309,
		306, 302, 299, 296, 293, 290, 287, 284, 281, 278, 275, 272, 268, 265, 262,
		259, 256, 253, 250, 247, 244, 240, 237, 234, 231, 228, 225, 222, 219, 216,
		213, 210, 206, 203, 200, 197, 194, 191, 188, 185, 182, 179, 176, 173, 170,
		168, 165, 162, 159, 156, 153, 150, 147, 145, 142, 139, 136, 134, 131, 128,
		125, 123, 120, 117, 115, 112, 110, 107, 105, 102, 100, 97, 95, 92, 90, 88, 85, 83,
		81, 79, 76, 74, 72, 70, 68, 66, 64, 62, 60, 58, 56, 54, 52, 50, 48, 47, 45, 43, 41,
		40, 38, 37, 35, 33, 32, 31, 29, 28, 26, 25, 24, 23, 21, 20, 19, 18, 17, 16, 15, 14,
		13, 12, 11, 10, 10, 9, 8, 8, 7, 6, 6, 5, 5, 4, 4, 4, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2,
		2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 6, 6, 7, 8, 8, 9, 10, 10, 11, 12, 13, 14, 15, 16,
		17, 18, 19, 20, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 35, 37, 38, 40, 41, 43, 45,
		47, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 79, 81, 83, 85, 88,
		90, 92, 95, 97, 100, 102, 105, 107, 110, 112, 115, 117, 120, 123, 125, 128, 131,
		134, 136, 139, 142, 145, 147, 150, 153, 156, 159, 162, 165, 168, 170, 173, 176,
		179, 182, 185, 188, 191, 194, 197, 200, 203, 206, 210, 213, 216, 219, 222,
		225, 228, 231, 234, 237, 240, 244, 247, 250, 253

};

#endif  // _MAIN_H_INCLUDED
